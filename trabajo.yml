---
apiVersion: v1
kind: Namespace
metadata:
  name: grupo3
---
apiVersion: v1
kind: ConfigMap  #punto 7
data:
  argsjvm: "-Dserver.port=8080"
metadata:
  name: mapa-configuracion
  namespace: grupo3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: devops-app
  name: devops-app
  namespace: grupo3
spec:
  replicas: 2 #Punto 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: devops-app
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 30%
    type: RollingUpdate #Punto 5
  template:
    metadata:
      labels:
        app: devops-app        
    spec:
      containers:
      - name: devops-app
        image: criscubillos/diplomado:devops-0.0.2
        imagePullPolicy: Always
        livenessProbe: #Punto 10
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 20 
          failureThreshold: 31
          successThreshold: 1
        readinessProbe: #Punto 10
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 10
          successThreshold: 1
        env: #Punto 6
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name      
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace          
          - name: argsjvm #punto 7
            valueFrom:
              configMapKeyRef:                 
                 key: argsjvm
                 name: mapa-configuracion
        volumeMounts: #punto 9
        - name: volumen-vacio
          mountPath: "/vacio"         
        - name: secreto-file #punto 8
          mountPath: "/dir-secreto"        
        ports:
        - containerPort: 8080 
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "512M"
          limits:
            memory: "1500M"
            cpu: "2000m"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes: #punto 9
        - name: volumen-vacio
          emptyDir: {}
        - name: secreto-file #punto 8
          secret:
            secretName: secret-basic-auth
---
apiVersion: v1
kind: Service
metadata:
  name: devops-app-svc
  namespace: grupo3
spec:
  ports:
  - name: devops-app-port
    port: 8080
    protocol: TCP
    targetPort: 8080            
  selector:
    app: devops-app
  type: ClusterIP #Punto 4
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: grupo3
  name: devops-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/app-root: /
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/" 
        backend:
          service:
            name: devops-app-svc
            port:
              number: 8080  
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: devops-app
  namespace: grupo3
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devops-app
  minReplicas: 2 #Punto 3
  maxReplicas: 4 #Punto 3
  targetCPUUtilizationPercentage: 50 #Punto 3
---
apiVersion: v1 #punto 8
kind: Secret
metadata:
 name: secret-basic-auth
 namespace: grupo3
type: kubernetes.io/basic-auth
stringData:
 username: admin
 password: t0p-Secret
